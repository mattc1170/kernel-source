From: Jiri Slaby <jslaby@suse.cz>
Date: Wed, 25 Oct 2017 11:01:19 +0200
Subject: Revert "bpf: one perf event close won't free bpf program attached by
 another perf event"
Patch-mainline: never, kabi
References: kabi

This reverts commit 1a4f1ecdb2573cebc9ef1b8bbed0185c0bd45e6c, upstream
commit ec9dd352d591f0c90402ec67a317c1ed4fb2e638. It breaks kABI and
cannot be worked around easily -- struct trace_event_call is included in
modules' _ftrace_events sections.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 include/linux/trace_events.h | 1 -
 kernel/events/core.c         | 3 +--
 2 files changed, 1 insertion(+), 3 deletions(-)

diff --git a/include/linux/trace_events.h b/include/linux/trace_events.h
index 311176f290b2..925730bc9fc1 100644
--- a/include/linux/trace_events.h
+++ b/include/linux/trace_events.h
@@ -301,7 +301,6 @@ struct trace_event_call {
 	int				perf_refcount;
 	struct hlist_head __percpu	*perf_events;
 	struct bpf_prog			*prog;
-	struct perf_event		*bpf_prog_owner;
 
 	int	(*perf_perm)(struct trace_event_call *,
 			     struct perf_event *);
diff --git a/kernel/events/core.c b/kernel/events/core.c
index 8f75386e61a7..3697063dd09a 100644
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@ -7108,7 +7108,6 @@ static int perf_event_set_bpf_prog(struct perf_event *event, u32 prog_fd)
 	}
 
 	event->tp_event->prog = prog;
-	event->tp_event->bpf_prog_owner = event;
 
 	return 0;
 }
@@ -7121,7 +7120,7 @@ static void perf_event_free_bpf_prog(struct perf_event *event)
 		return;
 
 	prog = event->tp_event->prog;
-	if (prog && event->tp_event->bpf_prog_owner == event) {
+	if (prog) {
 		event->tp_event->prog = NULL;
 		bpf_prog_put_rcu(prog);
 	}
-- 
2.14.3

