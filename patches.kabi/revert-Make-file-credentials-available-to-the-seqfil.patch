From: Jiri Slaby <jslaby@suse.cz>
Date: Mon, 14 Aug 2017 09:31:23 +0200
Subject: Revert "Make file credentials available to the seqfile interfaces"
Patch-mainline: never, kabi
References: kabi

This reverts commit 14ae9c4b5ae235bdaa74bb1c40de9a42ca691566, upstream
commit 34dbbcdbf63360661ff7bda6c5f52f99ac515f92. It breaks kABI of
seq_file. Especially, the inline helper relies on the user_ns member of
seq_file.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 fs/seq_file.c            |    7 +++----
 include/linux/seq_file.h |   13 +++++++++----
 2 files changed, 12 insertions(+), 8 deletions(-)

--- a/fs/seq_file.c
+++ b/fs/seq_file.c
@@ -72,10 +72,9 @@ int seq_open(struct file *file, const st
 
 	mutex_init(&p->lock);
 	p->op = op;
-
-	// No refcounting: the lifetime of 'p' is constrained
-	// to the lifetime of the file.
-	p->file = file;
+#ifdef CONFIG_USER_NS
+	p->user_ns = file->f_cred->user_ns;
+#endif
 
 	/*
 	 * Wrappers around seq_open(e.g. swaps_open) need to be
--- a/include/linux/seq_file.h
+++ b/include/linux/seq_file.h
@@ -7,10 +7,13 @@
 #include <linux/mutex.h>
 #include <linux/cpumask.h>
 #include <linux/nodemask.h>
-#include <linux/fs.h>
-#include <linux/cred.h>
 
 struct seq_operations;
+struct file;
+struct path;
+struct inode;
+struct dentry;
+struct user_namespace;
 
 struct seq_file {
 	char *buf;
@@ -24,7 +27,9 @@ struct seq_file {
 	struct mutex lock;
 	const struct seq_operations *op;
 	int poll_event;
-	const struct file *file;
+#ifdef CONFIG_USER_NS
+	struct user_namespace *user_ns;
+#endif
 	void *private;
 };
 
@@ -142,7 +147,7 @@ int seq_release_private(struct inode *,
 static inline struct user_namespace *seq_user_ns(struct seq_file *seq)
 {
 #ifdef CONFIG_USER_NS
-	return seq->file->f_cred->user_ns;
+	return seq->user_ns;
 #else
 	extern struct user_namespace init_user_ns;
 	return &init_user_ns;
