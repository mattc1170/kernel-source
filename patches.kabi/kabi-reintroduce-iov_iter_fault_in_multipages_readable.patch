From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: reintroduce iov_iter_fault_in_multipages_readable
Patch-mainline: never, kabi

In 4.4.22, commit 99526912c934f848e5dc1065ec6a1c1c33b1a8d1 (fix
iov_iter_fault_in_readable()), upstream commit
d4690f1e1cdabb4d61207b6787b1605a0dc0aeab made
iov_iter_fault_in_multipages_readable a macro.

Reintroduce the function, just as a wrapper to
iov_iter_fault_in_readable, which the macro does in upstream now.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 include/linux/uio.h |    1 +
 lib/iov_iter.c      |    9 +++++++++
 2 files changed, 10 insertions(+)

--- a/include/linux/uio.h
+++ b/include/linux/uio.h
@@ -76,6 +76,7 @@ size_t iov_iter_copy_from_user_atomic(st
 		struct iov_iter *i, unsigned long offset, size_t bytes);
 void iov_iter_advance(struct iov_iter *i, size_t bytes);
 int iov_iter_fault_in_readable(struct iov_iter *i, size_t bytes);
+int iov_iter_fault_in_multipages_readable(struct iov_iter *i, size_t bytes);
 #define iov_iter_fault_in_multipages_readable iov_iter_fault_in_readable
 size_t iov_iter_single_seg_count(const struct iov_iter *i);
 size_t copy_page_to_iter(struct page *page, size_t offset, size_t bytes,
--- a/lib/iov_iter.c
+++ b/lib/iov_iter.c
@@ -801,3 +801,12 @@ int import_single_range(int rw, void __u
 	iov_iter_init(i, rw, iov, 1, len);
 	return 0;
 }
+
+/* kABI crap */
+#undef iov_iter_fault_in_multipages_readable
+int iov_iter_fault_in_multipages_readable(struct iov_iter *i, size_t bytes)
+{
+	return iov_iter_fault_in_readable(i, bytes);
+}
+EXPORT_SYMBOL(iov_iter_fault_in_multipages_readable);
+
