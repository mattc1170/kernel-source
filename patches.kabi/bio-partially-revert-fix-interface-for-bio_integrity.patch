From: Hannes Reinecke <hare@suse.de>
Date: Wed, 8 Nov 2017 14:48:21 +0100
Subject: [PATCH] bio: partially revert 'fix interface for bio_integrity_trim'
Patch-Mainline: never, kABI fix for SLE12 SP3
References: bsc#1046054

Patch breaks kABI, so restore the original calling convention.

Signed-off-by: Hannes Reinecke <hare@suse.com>
---
 block/bio-integrity.c | 5 ++++-
 block/bio.c           | 4 ++--
 drivers/md/dm.c       | 4 ++--
 include/linux/bio.h   | 5 +++--
 4 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/block/bio-integrity.c b/block/bio-integrity.c
index 6170dad..81e045a 100644
--- a/block/bio-integrity.c
+++ b/block/bio-integrity.c
@@ -433,10 +433,13 @@ EXPORT_SYMBOL(bio_integrity_advance);
 /**
  * bio_integrity_trim - Trim integrity vector
  * @bio:	bio whose integrity vector to update
+ * @offset:	offset to first data sector (unused)
+ * @sectors:	number of data sectors (unused)
  *
  * Description: Used to trim the integrity vector in a cloned bio.
  */
-void bio_integrity_trim(struct bio *bio)
+void bio_integrity_trim(struct bio *bio, unsigned int offset,
+			unsigned int sectors)
 {
 	struct bio_integrity_payload *bip = bio_integrity(bio);
 	struct blk_integrity *bi = bdev_get_integrity(bio->bi_bdev);
diff --git a/block/bio.c b/block/bio.c
index 63d9c0b..7702662 100644
--- a/block/bio.c
+++ b/block/bio.c
@@ -1868,7 +1868,7 @@ struct bio *bio_split(struct bio *bio, int sectors,
 	split->bi_iter.bi_size = sectors << 9;
 
 	if (bio_integrity(split))
-		bio_integrity_trim(split);
+		bio_integrity_trim(split, 0, sectors);
 
 	bio_advance(bio, split->bi_iter.bi_size);
 
@@ -1899,7 +1899,7 @@ void bio_trim(struct bio *bio, int offset, int size)
 	bio->bi_iter.bi_size = size;
 
 	if (bio_integrity(bio))
-		bio_integrity_trim(bio);
+		bio_integrity_trim(bio, 0, size);
 
 }
 EXPORT_SYMBOL_GPL(bio_trim);
diff --git a/drivers/md/dm.c b/drivers/md/dm.c
index 3598a8d..e6771e6 100644
--- a/drivers/md/dm.c
+++ b/drivers/md/dm.c
@@ -1101,8 +1101,8 @@ static int clone_bio(struct dm_target_io *tio, struct bio *bio,
 	bio_advance(clone, to_bytes(sector - clone->bi_iter.bi_sector));
 	clone->bi_iter.bi_size = to_bytes(len);
 
-	if (unlikely(bio_integrity(bio) != NULL))
-		bio_integrity_trim(clone);
+	if (bio_integrity(bio))
+		bio_integrity_trim(clone, 0, len);
 
 	return 0;
 }
diff --git a/include/linux/bio.h b/include/linux/bio.h
index 0cd2feb..075b583 100644
--- a/include/linux/bio.h
+++ b/include/linux/bio.h
@@ -731,7 +731,7 @@ extern bool bio_integrity_enabled(struct bio *bio);
 extern int bio_integrity_prep(struct bio *);
 extern void bio_integrity_endio(struct bio *);
 extern void bio_integrity_advance(struct bio *, unsigned int);
-extern void bio_integrity_trim(struct bio *);
+extern void bio_integrity_trim(struct bio *, unsigned int, unsigned int);
 extern int bio_integrity_clone(struct bio *, struct bio *, gfp_t);
 extern int bioset_integrity_create(struct bio_set *, int);
 extern void bioset_integrity_free(struct bio_set *);
@@ -781,7 +781,8 @@ static inline void bio_integrity_advance(struct bio *bio,
 	return;
 }
 
-static inline void bio_integrity_trim(struct bio *bio)
+static inline void bio_integrity_trim(struct bio *bio, unsigned int offset,
+				      unsigned int sectors)
 {
 	return;
 }
-- 
1.8.5.6

