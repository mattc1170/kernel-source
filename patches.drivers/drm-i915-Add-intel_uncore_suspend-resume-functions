From 1662a86446d26720cb53ceef7b85fc70ca159484 Mon Sep 17 00:00:00 2001
From: Hans de Goede <hdegoede@redhat.com>
Date: Fri, 24 Feb 2017 10:29:11 +0100
Subject: [PATCH 11/14] drm/i915: Add intel_uncore_suspend / resume functions
Mime-version: 1.0
Content-type: text/plain; charset=UTF-8
Content-transfer-encoding: 8bit
References: bsc#1011913
Patch-mainline: Submitted, intel-gfx ML

Rename intel_uncore_early_sanitize to intel_uncore_resume, dropping the
(always true) restore_forcewake argument and add a new intel_uncore_resume
function to replace the intel_uncore_forcewake_reset(dev_priv, false)
calls done from the suspend / runtime_suspend functions and make
intel_uncore_forcewake_reset private.

This is a preparation patch for adding PMIC bus access notifier support.

Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=155241
Signed-off-by: Hans de Goede <hdegoede@redhat.com>
Tested-by: tagorereddy <tagore.chandan@gmail.com>
Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
Acked-by: Jani Nikula <jani.nikula@intel.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 drivers/gpu/drm/i915/i915_drv.c     |    6 +++---
 drivers/gpu/drm/i915/i915_drv.h     |    5 ++---
 drivers/gpu/drm/i915/intel_uncore.c |   11 ++++++++---
 3 files changed, 13 insertions(+), 9 deletions(-)

--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@ -675,7 +675,7 @@ static int i915_drm_suspend(struct drm_d
 #endif
 	intel_opregion_notify_adapter(dev, opregion_target_state);
 
-	intel_uncore_forcewake_reset(dev, false);
+	intel_uncore_suspend(dev);
 	intel_opregion_fini(dev);
 
 	intel_fbdev_set_suspend(dev, FBINFO_STATE_SUSPENDED, true);
@@ -869,7 +869,7 @@ static int i915_drm_resume_early(struct
 		DRM_ERROR("Resume prepare failed: %d, continuing anyway\n",
 			  ret);
 
-	intel_uncore_early_sanitize(dev, true);
+	intel_uncore_resume_early(dev);
 
 	if (IS_BROXTON(dev))
 		ret = bxt_resume_prepare(dev_priv);
@@ -1588,7 +1588,7 @@ static int intel_runtime_suspend(struct
 	}
 
 	cancel_delayed_work_sync(&dev_priv->gpu_error.hangcheck_work);
-	intel_uncore_forcewake_reset(dev, false);
+	intel_uncore_suspend(dev);
 	dev_priv->pm.suspended = true;
 
 	/*
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -2744,12 +2744,11 @@ int intel_irq_install(struct drm_i915_pr
 void intel_irq_uninstall(struct drm_i915_private *dev_priv);
 
 extern void intel_uncore_sanitize(struct drm_device *dev);
-extern void intel_uncore_early_sanitize(struct drm_device *dev,
-					bool restore_forcewake);
 extern void intel_uncore_init(struct drm_device *dev);
 extern void intel_uncore_check_errors(struct drm_device *dev);
 extern void intel_uncore_fini(struct drm_device *dev);
-extern void intel_uncore_forcewake_reset(struct drm_device *dev, bool restore);
+extern void intel_uncore_suspend(struct drm_device *dev);
+extern void intel_uncore_resume_early(struct drm_device *dev);
 const char *intel_uncore_forcewake_domain_to_str(const enum forcewake_domain_id id);
 void intel_uncore_forcewake_get(struct drm_i915_private *dev_priv,
 				enum forcewake_domains domains);
--- a/drivers/gpu/drm/i915/intel_uncore.c
+++ b/drivers/gpu/drm/i915/intel_uncore.c
@@ -261,7 +261,7 @@ static void intel_uncore_fw_release_time
 	spin_unlock_irqrestore(&domain->i915->uncore.lock, irqflags);
 }
 
-void intel_uncore_forcewake_reset(struct drm_device *dev, bool restore)
+static void intel_uncore_forcewake_reset(struct drm_device *dev, bool restore)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	unsigned long irqflags;
@@ -370,9 +370,14 @@ static void __intel_uncore_early_sanitiz
 	intel_uncore_forcewake_reset(dev, restore_forcewake);
 }
 
-void intel_uncore_early_sanitize(struct drm_device *dev, bool restore_forcewake)
+void intel_uncore_suspend(struct drm_device *dev)
 {
-	__intel_uncore_early_sanitize(dev, restore_forcewake);
+	intel_uncore_forcewake_reset(dev, false);
+}
+
+void intel_uncore_resume_early(struct drm_device *dev)
+{
+	__intel_uncore_early_sanitize(dev, true);
 	i915_check_and_clear_faults(dev);
 }
 
