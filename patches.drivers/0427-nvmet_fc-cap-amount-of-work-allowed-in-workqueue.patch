From: James Smart <jsmart2021@gmail.com>
Date: Tue, 30 May 2017 14:37:22 -0700
Subject: nvmet_fc: cap amount of work allowed in workqueue
References: bsc#1041877
Patch-mainline: Never, SUSE backport specific

Systems, under heavy io load, have watchdog timers firing because the
workqueue is continually running.  Granted, these are usually default
cases where work is isolated to a single cpu.

This fix was part of upstream patch:
http://lists.infradead.org/pipermail/linux-nvme/2017-May/010380.html

The upstream patch, due to overall dislike of of the workqueue use by
Christoph, has not yet been pulled in upstream, but is needed for SLES12SP3.

[hare: fixup for 0395-nvmet_fc-Reduce-work_q-count.patch]

Signed-off-by: James Smart <james.smart@broadcom.com>
Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>

---
 drivers/nvme/target/fc.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/nvme/target/fc.c b/drivers/nvme/target/fc.c
index d6df3a9d1403..25aab39016ab 100644
--- a/drivers/nvme/target/fc.c
+++ b/drivers/nvme/target/fc.c
@@ -160,6 +160,8 @@ struct nvmet_fc_work_by_cpu {
 	struct work_struct		cpu_work;
 };
 
+#define NVMET_FC_MAX_WORK_BUDGET	4096
+
 
 static inline int
 nvmet_fc_iodnum(struct nvmet_fc_ls_iod *iodptr)
@@ -2460,6 +2462,7 @@ nvmet_fc_do_work_on_cpu(struct work_struct *work)
 		container_of(work, struct nvmet_fc_work_by_cpu, cpu_work);
 	struct nvmet_fc_fcp_iod *fod;
 	unsigned long flags;
+	int workcnt = 0;
 
 	spin_lock_irqsave(&workcpu->clock, flags);
 
@@ -2477,6 +2480,9 @@ nvmet_fc_do_work_on_cpu(struct work_struct *work)
 
 		spin_lock_irqsave(&workcpu->clock, flags);
 
+		if (++workcnt >= NVMET_FC_MAX_WORK_BUDGET)
+			goto exit_reschedule;
+
 		fod = list_first_entry_or_null(&workcpu->fod_list,
 					struct nvmet_fc_fcp_iod, work_list);
 	}
@@ -2484,6 +2490,12 @@ nvmet_fc_do_work_on_cpu(struct work_struct *work)
 	workcpu->running = false;
 
 	spin_unlock_irqrestore(&workcpu->clock, flags);
+
+	return;
+
+exit_reschedule:
+	spin_unlock_irqrestore(&workcpu->clock, flags);
+	queue_work_on(workcpu->cpu, workcpu->work_q, &workcpu->cpu_work);
 }
 
 static int
-- 
2.11.0

