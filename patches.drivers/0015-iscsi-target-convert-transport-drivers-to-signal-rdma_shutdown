From: Nicholas Bellinger <nab@linux-iscsi.org>
Date: Sat, 14 May 2016 22:23:34 -0700
Subject: iscsi-target: Convert transport drivers to signal rdma_shutdown
Git-commit: bd027d856d3d7260017d0dc932201ce5fd7561f9
Patch-mainline: v4.7-rc1
References: bsc#982737 fate#320113

Instead of special casing the handful of callers that check for
iser-target rdma verbs specific shutdown, use a simple flag at
iscsit_transport->rdma_shutdown so each driver can signal this.

Also, update iscsi-target/tcp + cxgbit to rdma_shutdown = false.

Cc: Varun Prakash <varun@chelsio.com>
Cc: Hariprasad Shenai <hariprasad@chelsio.com>
Cc: Christoph Hellwig <hch@lst.de>
Cc: Sagi Grimberg <sagi@grimberg.me>
Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
Acked-by: Lee Duncan <lduncan@suse.com>
---
 drivers/infiniband/ulp/isert/ib_isert.c   |    1 +
 drivers/target/iscsi/cxgbit/cxgbit_main.c |    1 +
 drivers/target/iscsi/iscsi_target.c       |   10 ++++------
 include/target/iscsi/iscsi_transport.h    |    1 +
 4 files changed, 7 insertions(+), 6 deletions(-)

--- a/drivers/infiniband/ulp/isert/ib_isert.c
+++ b/drivers/infiniband/ulp/isert/ib_isert.c
@@ -3387,6 +3387,7 @@ static void isert_get_rx_pdu(struct iscs
 static struct iscsit_transport iser_target_transport = {
 	.name			= "IB/iSER",
 	.transport_type		= ISCSI_INFINIBAND,
+	.rdma_shutdown		= true,
 	.priv_size		= sizeof(struct isert_cmd),
 	.owner			= THIS_MODULE,
 	.iscsit_setup_np	= isert_setup_np,
--- a/drivers/target/iscsi/cxgbit/cxgbit_main.c
+++ b/drivers/target/iscsi/cxgbit/cxgbit_main.c
@@ -625,6 +625,7 @@ static enum target_prot_op cxgbit_get_su
 static struct iscsit_transport cxgbit_transport = {
 	.name			= DRV_NAME,
 	.transport_type		= ISCSI_HW_OFFLOAD,
+	.rdma_shutdown		= false,
 	.priv_size		= sizeof(struct cxgbit_cmd),
 	.owner			= THIS_MODULE,
 	.iscsit_setup_np	= cxgbit_setup_np,
--- a/drivers/target/iscsi/iscsi_target.c
+++ b/drivers/target/iscsi/iscsi_target.c
@@ -671,6 +671,7 @@ static enum target_prot_op iscsit_get_su
 static struct iscsit_transport iscsi_target_transport = {
 	.name			= "iSCSI/TCP",
 	.transport_type		= ISCSI_TCP,
+	.rdma_shutdown		= false,
 	.owner			= NULL,
 	.iscsit_setup_np	= iscsit_setup_np,
 	.iscsit_accept_np	= iscsit_accept_np,
@@ -4118,8 +4119,7 @@ int iscsit_close_connection(
 	 * this for iser since isert_rx_opcode() does not wait on logout failure,
 	 * and to avoid iscsi_conn pointer dereference in iser-target code.
 	 */
-	if ((conn->conn_transport->transport_type == ISCSI_TCP) ||
-	    (conn->conn_transport->transport_type == ISCSI_HW_OFFLOAD))
+	if (!conn->conn_transport->rdma_shutdown)
 		complete(&conn->conn_logout_comp);
 
 	if (!strcmp(current->comm, ISCSI_RX_THREAD_NAME)) {
@@ -4426,8 +4426,7 @@ static void iscsit_logout_post_handler_c
 	 * always sleep waiting for RX/TX thread shutdown to complete
 	 * within iscsit_close_connection().
 	 */
-	if ((conn->conn_transport->transport_type == ISCSI_TCP) ||
-	    (conn->conn_transport->transport_type == ISCSI_HW_OFFLOAD)) {
+	if (!conn->conn_transport->rdma_shutdown) {
 		sleep = cmpxchg(&conn->tx_thread_active, true, false);
 		if (!sleep)
 			return;
@@ -4447,8 +4446,7 @@ static void iscsit_logout_post_handler_s
 {
 	int sleep = 1;
 
-	if ((conn->conn_transport->transport_type == ISCSI_TCP) ||
-	    (conn->conn_transport->transport_type == ISCSI_HW_OFFLOAD)) {
+	if (!conn->conn_transport->rdma_shutdown) {
 		sleep = cmpxchg(&conn->tx_thread_active, true, false);
 		if (!sleep)
 			return;
--- a/include/target/iscsi/iscsi_transport.h
+++ b/include/target/iscsi/iscsi_transport.h
@@ -6,6 +6,7 @@ struct iscsit_transport {
 #define ISCSIT_TRANSPORT_NAME	16
 	char name[ISCSIT_TRANSPORT_NAME];
 	int transport_type;
+	bool rdma_shutdown;
 	int priv_size;
 	struct module *owner;
 	struct list_head t_node;
