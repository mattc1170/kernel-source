From: Jacob Keller <jacob.e.keller@intel.com>
Date: Tue, 24 May 2016 13:56:31 -0700
Subject: igb: call igb_ptp_suspend during suspend/resume cycle
Patch-mainline: v4.8-rc1
Git-commit: 8646f7b4cdf2d0557e718c4524a3e31455b92ad7
References: bsc#1024361 FATE#321242 bsc#1024365 FATE#321243

Properly stop the extra workqueue items and ensure that we resume
cleanly. This is better than using igb_ptp_init and igb_ptp_stop since
these functions destroy the PHC device, which will cause other problems
if we do so. Since igb_ptp_reset now re-schedules the work-queue item we
don't need an equivalent igb_ptp_resume in the resume workflow.

Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
Tested-by: Aaron Brown <aaron.f.brown@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Acked-by: Benjamin Poirier <bpoirier@suse.com>
---
 drivers/net/ethernet/intel/igb/igb_main.c |    2 ++
 1 file changed, 2 insertions(+)

--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@ -7474,6 +7474,8 @@ static int __igb_shutdown(struct pci_dev
 	if (netif_running(netdev))
 		__igb_close(netdev, true);
 
+	igb_ptp_suspend(adapter);
+
 	igb_clear_interrupt_scheme(adapter);
 	rtnl_unlock();
 
