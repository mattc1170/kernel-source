From: "Luis R. Rodriguez" <mcgrof@suse.com>
Subject: [PATCH] xfs: fix buffer overflow dm_get_dirattrs/dm_get_dirattrs2
Patch-mainline: Never, the DMAPI was rejected upstream
References: bsc#989056

Reading the directory and stat information via dm_get_dirattrs()
and dm_get_dirattrs2() can overfill the buffer supplied. The bug
was introduced in the Linux 2.6 -> Linux 3.0 port. When the overflow
occurs the call will overwrite past the end of the user buffer,
corrupting memory. If the directory entry name that is being copied
out is bigger than 136 bytes, then the function will corrupt kernel
memory outside the allocated range.

This issue can be verified using xfstests xfs/144 and xfs/156.

Signed-off-by: Luis R. Rodriguez <mcgrof@suse.com>
---
 fs/xfs/dmapi/xfs_dm.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/fs/xfs/dmapi/xfs_dm.c b/fs/xfs/dmapi/xfs_dm.c
index 0898f3c85a2e..f9fa7bc37b61 100644
--- a/fs/xfs/dmapi/xfs_dm.c
+++ b/fs/xfs/dmapi/xfs_dm.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2000-2006,2011 SGI.
+ * Copyright (c) 2000-2006,2011-2016 SGI.
  * All Rights Reserved.
  *
  * This program is free software; you can redistribute it and/or
@@ -1590,7 +1590,7 @@ dm_filldir(struct dir_context *ctx, const char *name, int namelen,
 
 	memset(statp, 0, dm_stat_size(MAXNAMLEN));
 	error = xfs_dm_bulkattr_iget_one(cb->mp, ino,
-			statp, needed);
+			statp, sizeof(dm_stat_t) + sizeof(dm_handle_t));
 	if (error)
 		goto out_err;
 
@@ -1605,6 +1605,8 @@ dm_filldir(struct dir_context *ctx, const char *name, int namelen,
 
 	/* Word-align the record */
 	statp->_link = dm_stat_align(len + namelen + 1);
+	ASSERT(needed == statp->_link);
+	ASSERT(cb->spaceleft >= statp->_link);
 
 	error = -EFAULT;
 	if (copy_to_user(cb->ubuf, statp, len))
@@ -1695,6 +1697,7 @@ xfs_dm_get_dirattrs_rvp(
 	error = -EFAULT;
 	if (cb.lastbuf && put_user(0, &cb.lastbuf->_link))
 		goto out_kfree;
+	ASSERT(cb.nwritten <= buflen);
 	if (put_user(cb.nwritten, rlenp))
 		goto out_kfree;
 	if (copy_to_user(locp, &loc, sizeof(loc)))
