From: "Yan, Zheng" <zyan@redhat.com>
Date: Tue, 11 Jul 2017 17:34:46 +0800
Subject: ceph: limit osd write size
Git-commit: 95cca2b44e54b00a3ed6ed7dc869717cd6807e81
Patch-mainline: v4.14-rc1
References: bsc#1061451

OSD has a configurable limitation of max write size. OSD return
error if write request size is larger than the limitation. For now,
set max write size to CEPH_MSG_MAX_DATA_LEN. It should be small
enough.

Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
[luis: use PAGE_CACHE_SIZE instead of PAGE_SIZE, as we don't have commit
 09cbfeaf1a5a ("mm, fs: get rid of PAGE_CACHE_* and
 page_cache_{get,release} macros")]
Acked-by: Luis Henriques <lhenriques@suse.com>
---
 fs/ceph/addr.c  |    4 +---
 fs/ceph/file.c  |    4 +++-
 fs/ceph/super.c |    5 ++++-
 fs/ceph/super.h |    3 +++
 4 files changed, 11 insertions(+), 5 deletions(-)

--- a/fs/ceph/addr.c
+++ b/fs/ceph/addr.c
@@ -778,10 +778,8 @@ static int ceph_writepages_start(struct
 		mapping_set_error(mapping, -EIO);
 		return -EIO; /* we're in a forced umount, don't write! */
 	}
-	if (fsc->mount_options->wsize && fsc->mount_options->wsize < wsize)
+	if (fsc->mount_options->wsize < wsize)
 		wsize = fsc->mount_options->wsize;
-	if (wsize < PAGE_CACHE_SIZE)
-		wsize = PAGE_CACHE_SIZE;
 	max_pages_ever = wsize >> PAGE_CACHE_SHIFT;
 
 	pagevec_init(&pvec, 0);
--- a/fs/ceph/file.c
+++ b/fs/ceph/file.c
@@ -892,7 +892,9 @@ ceph_direct_read_write(struct kiocb *ioc
 			break;
 		}
 
-		if (!write)
+		if (write)
+			size = min_t(u64, size, fsc->mount_options->wsize);
+		else
 			size = min_t(u64, size, fsc->mount_options->rsize);
 
 		len = size;
--- a/fs/ceph/super.c
+++ b/fs/ceph/super.c
@@ -235,7 +235,9 @@ static int parse_fsopt_token(char *c, vo
 		break;
 		/* misc */
 	case Opt_wsize:
-		fsopt->wsize = intval;
+		if (intval < PAGE_CACHE_SIZE || intval > CEPH_MAX_WRITE_SIZE)
+			return -EINVAL;
+		fsopt->wsize = ALIGN(intval, PAGE_CACHE_SIZE);
 		break;
 	case Opt_rsize:
 		if (intval < PAGE_SIZE || intval > CEPH_MAX_READ_SIZE)
@@ -394,6 +396,7 @@ static int parse_mount_options(struct ce
 	fsopt->sb_flags = flags;
 	fsopt->flags = CEPH_MOUNT_OPT_DEFAULT;
 
+	fsopt->wsize = CEPH_MAX_WRITE_SIZE;
 	fsopt->rsize = CEPH_MAX_READ_SIZE;
 	fsopt->rasize = CEPH_RASIZE_DEFAULT;
 	fsopt->snapdir_name = kstrdup(CEPH_SNAPDIRNAME_DEFAULT, GFP_KERNEL);
--- a/fs/ceph/super.h
+++ b/fs/ceph/super.h
@@ -47,6 +47,9 @@
 
 /* max size of osd read request, limited by libceph */
 #define CEPH_MAX_READ_SIZE              CEPH_MSG_MAX_DATA_LEN
+/* osd has a configurable limitaion of max write size.
+ * CEPH_MSG_MAX_DATA_LEN should be small enough. */
+#define CEPH_MAX_WRITE_SIZE		CEPH_MSG_MAX_DATA_LEN
 #define CEPH_RASIZE_DEFAULT             (8192*1024)    /* max readahead */
 #define CEPH_MAX_READDIR_DEFAULT        1024
 #define CEPH_MAX_READDIR_BYTES_DEFAULT  (512*1024)
