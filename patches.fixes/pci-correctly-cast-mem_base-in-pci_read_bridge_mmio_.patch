From 119db5d5373549fb083fb29753cd1fdf9a8559bb Mon Sep 17 00:00:00 2001
From: Hannes Reinecke <hare@suse.de>
Date: Tue, 25 Oct 2016 16:40:17 +0200
Subject: [PATCH] pci: correctly cast mem_base in pci_read_bridge_mmio_pref()
References: bsc#1001888
Patch-Mainline: Not yet, preliminary fix for SLES12 SP2 GMC

Commit 7fc986d ("PCI: Support 64-bit bridge windows") lost a
cast, causing the memory base always to evaluate to 0.

Fixes: 7fc986d ("PCI: Support 64-bit bridge windows if we have 64-bit dma_addr_t")
Signed-off-by: Hannes Reinecke <hare@suse.com>
---
 drivers/pci/probe.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
index 60d41e8..ffd7dda 100644
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@ -412,8 +412,8 @@ static void pci_read_bridge_mmio_pref(struct pci_bus *child)
 	res = child->resource[2];
 	pci_read_config_word(dev, PCI_PREF_MEMORY_BASE, &mem_base_lo);
 	pci_read_config_word(dev, PCI_PREF_MEMORY_LIMIT, &mem_limit_lo);
-	base64 = (mem_base_lo & PCI_PREF_RANGE_MASK) << 16;
-	limit64 = (mem_limit_lo & PCI_PREF_RANGE_MASK) << 16;
+	base64 = ((u64)mem_base_lo & PCI_PREF_RANGE_MASK) << 16;
+	limit64 = ((u64)mem_limit_lo & PCI_PREF_RANGE_MASK) << 16;
 
 	if ((mem_base_lo & PCI_PREF_RANGE_TYPE_MASK) == PCI_PREF_RANGE_TYPE_64) {
 		u32 mem_base_hi, mem_limit_hi;
-- 
1.8.5.6

