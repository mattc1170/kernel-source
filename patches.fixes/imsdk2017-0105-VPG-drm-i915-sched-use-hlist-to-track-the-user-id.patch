From d6dc13445a4b010aca56a2c1891a3e11f4c641c1 Mon Sep 17 00:00:00 2001
From: Zhipeng Gong <zhipeng.gong@intel.com>
Date: Sun, 20 Mar 2016 23:43:54 -0400
Subject: [PATCH 105/143] [VPG]: drm/i915/sched: use hlist to track the user id

---
 drivers/gpu/drm/i915/i915_drv.h         |    8 ++++++--
 drivers/gpu/drm/i915/i915_gem.c         |    2 +-
 drivers/gpu/drm/i915/i915_gem_context.c |    4 +++-
 drivers/gpu/drm/i915/i915_scheduler.c   |    7 ++++---
 4 files changed, 14 insertions(+), 7 deletions(-)

Index: current/drivers/gpu/drm/i915/i915_drv.h
===================================================================
--- current.orig/drivers/gpu/drm/i915/i915_drv.h
+++ current/drivers/gpu/drm/i915/i915_drv.h
@@ -877,6 +877,10 @@ struct i915_fence_timeline {
 	struct intel_engine_cs *ring;
 };
 
+#define CONTEXT_HLIST_BITSHIFT		(8)
+#define CONTEXT_HLIST_MASK	 	((1 << CONTEXT_HLIST_BITSHIFT) - 1)
+#define CONTEXT_HLIST_LEN	 	(1 << CONTEXT_HLIST_BITSHIFT)
+
 /* This must match up with the value previously used for execbuf2.rsvd1. */
 #define DEFAULT_CONTEXT_HANDLE 0
 
@@ -929,7 +933,7 @@ struct intel_context {
 	} engine[I915_NUM_RINGS];
 
 	struct list_head link;
-	struct list_head req_head;
+	struct hlist_head req_head[CONTEXT_HLIST_LEN];
 
 	/* perfmon configuration */
 	struct drm_i915_perfmon_context perfmon;
@@ -2369,7 +2373,7 @@ struct drm_i915_gem_request {
 	/** Execlists no. of times this request has been sent to the ELSP */
 	int elsp_submitted;
 
-	struct list_head ctx_link;
+	struct hlist_node ctx_link;
 	uint32_t dep_uniq;
 };
 
Index: current/drivers/gpu/drm/i915/i915_gem.c
===================================================================
--- current.orig/drivers/gpu/drm/i915/i915_gem.c
+++ current/drivers/gpu/drm/i915/i915_gem.c
@@ -3236,7 +3236,7 @@ int i915_gem_request_alloc(struct intel_
 	}
 
 	init_waitqueue_head(&req->locked_wait_queue);
-	INIT_LIST_HEAD(&req->ctx_link);
+	INIT_HLIST_NODE(&req->ctx_link);
 	INIT_LIST_HEAD(&req->signal_link);
 	fence_init(&req->fence, &i915_gem_request_fops, &ring->fence_lock,
 		   ctx->engine[ring->id].fence_timeline.fence_context,
Index: current/drivers/gpu/drm/i915/i915_gem_context.c
===================================================================
--- current.orig/drivers/gpu/drm/i915/i915_gem_context.c
+++ current/drivers/gpu/drm/i915/i915_gem_context.c
@@ -213,6 +213,7 @@ __create_hw_context(struct drm_device *d
 	struct drm_i915_private *dev_priv = dev->dev_private;
 	struct intel_context *ctx;
 	int ret;
+	int i;
 
 	ctx = kzalloc(sizeof(*ctx), GFP_KERNEL);
 	if (ctx == NULL)
@@ -222,7 +223,8 @@ __create_hw_context(struct drm_device *d
 	list_add_tail(&ctx->link, &dev_priv->context_list);
 	ctx->i915 = dev_priv;
 
-	INIT_LIST_HEAD(&ctx->req_head);
+	for (i = 0; i < CONTEXT_HLIST_LEN; i++)
+		INIT_HLIST_HEAD(&ctx->req_head[i]);
 
 	if (dev_priv->hw_context_size) {
 		struct drm_i915_gem_object *obj =
Index: current/drivers/gpu/drm/i915/i915_scheduler.c
===================================================================
--- current.orig/drivers/gpu/drm/i915/i915_scheduler.c
+++ current/drivers/gpu/drm/i915/i915_scheduler.c
@@ -766,8 +766,9 @@ static int i915_generate_dependencies(st
 	struct drm_i915_gem_request *req = node->params.request;
 	struct drm_i915_gem_request *that = node->params.request;
 	int i;
+	struct hlist_head *rh = &node->params.ctx->req_head[node->params.user_ctx_id & CONTEXT_HLIST_MASK];
 
-	list_for_each_entry(that, &node->params.ctx->req_head, ctx_link) {
+	hlist_for_each_entry(that, rh, ctx_link) {
 		count++;
 
 		if (!that->scheduler_qe || I915_SQS_IS_COMPLETE(that->scheduler_qe))
@@ -786,7 +787,7 @@ static int i915_generate_dependencies(st
 		}
 	}
 
-	list_add_tail(&req->ctx_link, &node->params.ctx->req_head);
+	hlist_add_head(&req->ctx_link, rh);
 
 	for (i = 0; i < node->num_objs; i++) {
 		this_oe = node->objs + i;
@@ -1123,7 +1124,7 @@ void i915_scheduler_clean_node(struct i9
 
 	/* Context too: */
 	if (node->params.ctx) {
-		list_del(&node->params.request->ctx_link);
+		hlist_del(&node->params.request->ctx_link);
 		i915_gem_context_unreference(node->params.ctx);
 		node->params.ctx = NULL;
 	}
