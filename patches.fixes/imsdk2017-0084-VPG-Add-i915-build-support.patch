From 269dfaa4cdbccbcf07f0d22f85e30335d7bbd1a2 Mon Sep 17 00:00:00 2001
From: Oliver Sang <oliver.sang@intel.com>
Date: Mon, 25 Jan 2016 19:38:46 +0800
Subject: [PATCH 084/143] [VPG]: Add i915 build support

build_i915.sh without params is for local usage.
'build_i915.sh qb-generic' is for QB Linux/Generic build.
The LOCALVERSION in config.qb-generic is set as"-vpg20160125-gcc4.7.2",
within same config file, there are other two changes -
disable CONFIG_MODULE_SIG for debug purpose;
use CONFIG_CC_STACKPROTECTOR_REGULAR=y instead of CONFIG_CC_STACKPROTECTOR_STRONG,
this is because the generic is built from gcc4.7.2, the STRONG is not supported.
---
 drivers/gpu/drm/Makefile.drm |   42 ++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 42 insertions(+), 0 deletions(-)
 create mode 100644 drivers/gpu/drm/Makefile.drm

diff --git a/drivers/gpu/drm/Makefile.drm b/drivers/gpu/drm/Makefile.drm
new file mode 100644
index 0000000..55caf83
--- /dev/null
+++ b/drivers/gpu/drm/Makefile.drm
@@ -0,0 +1,42 @@
+#
+# Makefile for the drm device driver.  This driver provides support for the
+# Direct Rendering Infrastructure (DRI) in XFree86 4.1.0 and higher.
+
+drm-y       :=	drm_auth.o drm_bufs.o drm_cache.o \
+		drm_context.o drm_dma.o \
+		drm_fops.o drm_gem.o drm_ioctl.o drm_irq.o \
+		drm_lock.o drm_memory.o drm_drv.o drm_vm.o \
+		drm_scatter.o drm_pci.o \
+		drm_platform.o drm_sysfs.o drm_hashtab.o drm_mm.o \
+		drm_crtc.o drm_modes.o drm_edid.o \
+		drm_info.o drm_debugfs.o drm_encoder_slave.o \
+		drm_trace_points.o drm_global.o drm_prime.o \
+		drm_rect.o drm_vma_manager.o drm_flip_work.o \
+		drm_modeset_lock.o drm_atomic.o drm_bridge.o
+
+drm-$(CONFIG_COMPAT) += drm_ioc32.o
+drm-$(CONFIG_DRM_GEM_CMA_HELPER) += drm_gem_cma_helper.o
+drm-$(CONFIG_PCI) += ati_pcigart.o
+drm-$(CONFIG_DRM_PANEL) += drm_panel.o
+drm-$(CONFIG_OF) += drm_of.o
+drm-$(CONFIG_AGP) += drm_agpsupport.o
+
+drm-y += $(drm-m)
+
+drm_kms_helper-y := drm_crtc_helper.o drm_dp_helper.o drm_probe_helper.o \
+		drm_plane_helper.o drm_dp_mst_topology.o drm_atomic_helper.o
+drm_kms_helper-$(CONFIG_DRM_LOAD_EDID_FIRMWARE) += drm_edid_load.o
+drm_kms_helper-$(CONFIG_DRM_FBDEV_EMULATION) += drm_fb_helper.o
+drm_kms_helper-$(CONFIG_DRM_KMS_CMA_HELPER) += drm_fb_cma_helper.o
+
+obj-$(CONFIG_DRM_KMS_HELPER) += drm_kms_helper.o
+
+CFLAGS_drm_trace_points.o := -I$(src)
+
+obj-$(CONFIG_DRM)	+= drm.o
+obj-$(CONFIG_DRM_MIPI_DSI) += drm_mipi_dsi.o
+obj-$(CONFIG_DRM_I915)  += i915/
+obj-y			+= tilcdc/
+obj-y			+= i2c/
+obj-y			+= panel/
+obj-y			+= bridge/
-- 
1.7.1

