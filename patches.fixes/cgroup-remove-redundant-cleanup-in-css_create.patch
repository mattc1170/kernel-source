From a53c39c9c064240d23040394ee4748cd75473fca Mon Sep 17 00:00:00 2001
From: Wenwei Tao <ww.tao0320@gmail.com>
Date: Fri, 13 May 2016 22:59:20 +0800
Subject: [PATCH 6/7] cgroup: remove redundant cleanup in css_create
Git-commit: b00c52dae6d9ee8d0f2407118ef6544ae5524781
Patch-mainline: v4.7-rc6
References: bsc#1012829

When create css failed, before call css_free_rcu_fn, we remove the css
id and exit the percpu_ref, but we will do these again in
css_free_work_fn, so they are redundant.  Especially the css id, that
would cause problem if we remove it twice, since it may be assigned to
another css after the first remove.

Tj: This was broken by two commits updating the free path without
    synchronizing the creation failure path.  This can be easily
    triggered by trying to create more than 64k memory cgroups.

Signed-off-by: Wenwei Tao <ww.tao0320@gmail.com>
Signed-off-by: Tejun Heo <tj@kernel.org>
Cc: Vladimir Davydov <vdavydov@parallels.com>
Fixes: 9a1049da9bd2 ("percpu-refcount: require percpu_ref to be exited explicitly")
Fixes: 01e586598b22 ("cgroup: release css->id after css_free")
Cc: stable@vger.kernel.org # v3.17+
Acked-by: Jan Kara <jack@suse.cz>

---
 kernel/cgroup.c | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

diff --git a/kernel/cgroup.c b/kernel/cgroup.c
index 7d3bd251930a..de4d4a5cc326 100644
--- a/kernel/cgroup.c
+++ b/kernel/cgroup.c
@@ -4884,13 +4884,13 @@ static int create_css(struct cgroup *cgrp, struct cgroup_subsys *ss,
 
 	err = cgroup_idr_alloc(&ss->css_idr, NULL, 2, 0, GFP_KERNEL);
 	if (err < 0)
-		goto err_free_percpu_ref;
+		goto err_free_css;
 	css->id = err;
 
 	if (visible) {
 		err = css_populate_dir(css, NULL);
 		if (err)
-			goto err_free_id;
+			goto err_free_css;
 	}
 
 	/* @css is ready to be brought online now, make it visible */
@@ -4915,10 +4915,6 @@ static int create_css(struct cgroup *cgrp, struct cgroup_subsys *ss,
 err_list_del:
 	list_del_rcu(&css->sibling);
 	css_clear_dir(css, NULL);
-err_free_id:
-	cgroup_idr_remove(&ss->css_idr, css->id);
-err_free_percpu_ref:
-	percpu_ref_exit(&css->refcnt);
 err_free_css:
 	call_rcu(&css->rcu_head, css_free_rcu_fn);
 	return err;
-- 
2.10.0

