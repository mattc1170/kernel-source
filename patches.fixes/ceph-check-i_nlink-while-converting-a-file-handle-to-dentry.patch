From: Luis Henriques <lhenriques@suse.com>
Date: Wed, 17 May 2017 12:21:07 +0100
Subject: ceph: check i_nlink while converting a file handle to dentry
Patch-mainline: Queued in subsystem maintainer repository
Git-repo: git://github.com/ceph/ceph-client
Git-commit: 1714fca5fd9092e839af2fb7148da2359d5c786e
References: bsc#1039864

Converting a file handle to a dentry can be done call after the inode
unlink.  This means that __fh_to_dentry() requires an extra check to
verify the number of links is not 0.

The issue can be easily reproduced using xfstest generic/426, which does
something like:

  name_to_handle_at(&fh)
  echo 3 > /proc/sys/vm/drop_caches
  unlink()
  open_by_handle_at(&fh)

The call to open_by_handle_at() should fail, as the file doesn't exist
anymore.

Cc: stable@vger.kernel.org
Link: http://tracker.ceph.com/issues/19958
Signed-off-by: Luis Henriques <lhenriques@suse.com>
---
 fs/ceph/export.c |    4 ++++
 1 file changed, 4 insertions(+)

--- a/fs/ceph/export.c
+++ b/fs/ceph/export.c
@@ -86,6 +86,10 @@ static struct dentry *__fh_to_dentry(str
 		ceph_mdsc_put_request(req);
 		if (!inode)
 			return ERR_PTR(-ESTALE);
+		if (inode->i_nlink == 0) {
+			iput(inode);
+			return ERR_PTR(-ESTALE);
+		}
 	}
 
 	dentry = d_obtain_alias(inode);
