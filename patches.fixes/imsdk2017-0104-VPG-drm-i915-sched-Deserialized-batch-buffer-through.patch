From 1d78debc0a33d8bf325b4a8f43cfac941cc199b8 Mon Sep 17 00:00:00 2001
From: Zhipeng Gong <zhipeng.gong@intel.com>
Date: Sat, 19 Mar 2016 10:19:46 -0400
Subject: [PATCH 104/143] [VPG]: drm/i915/sched: Deserialized batch buffer through user id.

---
 drivers/gpu/drm/i915/i915_dma.c            |    3 +++
 drivers/gpu/drm/i915/i915_drv.h            |    1 +
 drivers/gpu/drm/i915/i915_gem_execbuffer.c |    5 +++--
 drivers/gpu/drm/i915/i915_scheduler.c      |    3 +++
 include/uapi/drm/i915_drm.h                |    1 +
 5 files changed, 11 insertions(+), 2 deletions(-)

Index: current/drivers/gpu/drm/i915/i915_dma.c
===================================================================
--- current.orig/drivers/gpu/drm/i915/i915_dma.c
+++ current/drivers/gpu/drm/i915/i915_dma.c
@@ -178,6 +178,9 @@ static int i915_getparam(struct drm_devi
 		value = !dev_priv->workarounds.WaForceEnableNonCoherent &&
 			INTEL_INFO(dev)->gen >= 9;
 		break;
+	case I915_PRIVATE_PARAM_SCHEDULER_SUPPORT_USER_CTX:
+		value = 1;
+		break;
 	default:
 		DRM_DEBUG("Unknown parameter %d\n", param->param);
 		return -EINVAL;
Index: current/drivers/gpu/drm/i915/i915_drv.h
===================================================================
--- current.orig/drivers/gpu/drm/i915/i915_drv.h
+++ current/drivers/gpu/drm/i915/i915_drv.h
@@ -1760,6 +1760,7 @@ struct i915_execbuffer_params {
 	int                             instp_mode;
 	struct intel_context            *ctx;
 	struct drm_i915_gem_request     *request;
+	uint32_t                        user_ctx_id;
 };
 
 struct i915_scheduler;
Index: current/drivers/gpu/drm/i915/i915_gem_execbuffer.c
===================================================================
--- current.orig/drivers/gpu/drm/i915/i915_gem_execbuffer.c
+++ current/drivers/gpu/drm/i915/i915_gem_execbuffer.c
@@ -959,8 +959,8 @@ i915_gem_check_execbuffer(struct drm_i91
 		return false;
 
 	/* Kernel clipping was a DRI1 misfeature */
-	if (exec->num_cliprects || exec->cliprects_ptr)
-		return false;
+	if (exec->cliprects_ptr)
+			return false;
 
 	if (exec->DR4 == 0xffffffff) {
 		DRM_DEBUG("UXA submitting garbage DR4, fixing up\n");
@@ -1737,6 +1737,7 @@ i915_gem_do_execbuffer(struct drm_device
 	params->args_flags              = args->flags;
 	params->args_batch_len          = args->batch_len;
 	params->args_num_cliprects      = args->num_cliprects;
+	params->user_ctx_id             = args->num_cliprects;
 	params->args_DR1                = args->DR1;
 	params->args_DR4                = args->DR4;
 	params->batch_obj               = batch_obj;
Index: current/drivers/gpu/drm/i915/i915_scheduler.c
===================================================================
--- current.orig/drivers/gpu/drm/i915/i915_scheduler.c
+++ current/drivers/gpu/drm/i915/i915_scheduler.c
@@ -776,6 +776,9 @@ static int i915_generate_dependencies(st
 		if (that->ring != node->params.ring)
 			continue;
 
+		if (that->scheduler_qe->params.user_ctx_id != node->params.user_ctx_id)
+			continue;
+
 		if (that->dep_uniq != req->uniq) {
 			node->dep_list[node->num_deps] = that->scheduler_qe;
 			node->num_deps++;
Index: current/include/uapi/drm/i915_drm.h
===================================================================
--- current.orig/include/uapi/drm/i915_drm.h
+++ current/include/uapi/drm/i915_drm.h
@@ -362,6 +362,7 @@ typedef struct drm_i915_irq_wait {
 #define I915_PARAM_HAS_RESOURCE_STREAMER 36
 #define I915_PARAM_HAS_EXEC_SOFTPIN	 37
 
+#define I915_PRIVATE_PARAM_SCHEDULER_SUPPORT_USER_CTX  (-2)
 #define I915_PRIVATE_PARAM_HAS_EXEC_FORCE_NON_COHERENT (-1)
 
 typedef struct drm_i915_getparam {
