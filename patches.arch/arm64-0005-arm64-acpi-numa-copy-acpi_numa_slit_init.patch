From fe92e50dac341f060441f617772c9b2c64735054 Mon Sep 17 00:00:00 2001
From: Matthias Brugger <mbrugger@suse.com>
Date: Mon, 27 Jun 2016 18:40:00 +0200
Subject: arm64: acpi/numa: copy acpi_numa_slit_init()
Git-commit: 6525afdf53b39968f1a109b1ce1607ca6c98d300 (partial)
Patch-mainline: v4.8-rc1
References: fate#319981

This patch copies acpi_numa_slit_init() to arm64 code, so that no
generic code get changed.

Based on:
6525afdf53b ("ACPI / NUMA: move acpi_numa_slit_init() to
drivers/acpi/numa.c")

Signed-off-by: Matthias Brugger <mbrugger@suse.com>
---
The patch is reworked to not touch generic code

 arch/arm64/kernel/acpi_numa.c | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/arch/arm64/kernel/acpi_numa.c b/arch/arm64/kernel/acpi_numa.c
index f85149c..45aaa7f 100644
--- a/arch/arm64/kernel/acpi_numa.c
+++ b/arch/arm64/kernel/acpi_numa.c
@@ -38,6 +38,33 @@ struct __node_cpu_hwid {
 static struct __node_cpu_hwid early_node_cpu_hwid[NR_CPUS] = {
 [0 ... NR_CPUS - 1] = {NUMA_NO_NODE, PHYS_CPUID_INVALID} };
 
+/*
+ * Callback for SLIT parsing.  pxm_to_node() returns NUMA_NO_NODE for
+ * I/O localities since SRAT does not list them.  I/O localities are
+ * not supported at this point.
+ */
+void __init acpi_numa_slit_init(struct acpi_table_slit *slit)
+{
+	int i, j;
+
+	for (i = 0; i < slit->locality_count; i++) {
+		const int from_node = pxm_to_node(i);
+
+		if (from_node == NUMA_NO_NODE)
+			continue;
+
+		for (j = 0; j < slit->locality_count; j++) {
+			const int to_node = pxm_to_node(j);
+
+			if (to_node == NUMA_NO_NODE)
+				continue;
+
+			numa_set_distance(from_node, to_node,
+				slit->entry[slit->locality_count * i + j]);
+		}
+	}
+}
+
 int acpi_numa_get_nid(unsigned int cpu, u64 hwid)
 {
 	int i;
-- 
2.8.4

