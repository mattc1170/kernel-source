From 00efe7671cc0cf77bee16ebb47dd57a4c8baee7f Mon Sep 17 00:00:00 2001
From: Miroslav Benes <mbenes@suse.cz>
Date: Mon, 5 Sep 2016 17:26:36 +0200
Subject: [PATCH 3/3] kgr/module: make a taint flag module-specific
Patch-mainline: not yet, kgraft
References: fate#313296

There is no reliable way to determine which module tainted the kernel
with TAINT_LIVEPATCH (which we use for kGraft). /sys/module/<kgraft
module>/taint does not report it, neither does "mod -t" command in the
crash tool.

Associate the taint flag with kgraft patch module during module
initialization stage. The flag will still get set in the kernel, but now
also with the same flag in mod->taint.

Originally-by: Josh Poimboeuf <jpoimboe@redhat.com>
Signed-off-by: Miroslav Benes <mbenes@suse.cz>
---
 kernel/kgraft.c | 5 ++---
 kernel/module.c | 2 ++
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/kernel/kgraft.c b/kernel/kgraft.c
index 395b2c7bd64b..26e743ee9172 100644
--- a/kernel/kgraft.c
+++ b/kernel/kgraft.c
@@ -1051,6 +1051,8 @@ int kgr_modify_kernel(struct kgr_patch *patch, bool revert)
 		goto err_unlock;
 	}
 
+	add_taint_module(patch->owner, TAINT_LIVEPATCH, LOCKDEP_STILL_OK);
+
 	pr_info("%sing patch '%s'\n", revert ? "revert" : "apply",
 			patch->name);
 
@@ -1135,9 +1137,6 @@ int kgr_patch_kernel(struct kgr_patch *patch)
 		return -EBUSY;
 	}
 
-	pr_notice_once("tainting kernel with TAINT_LIVEPATCH\n");
-	add_taint(TAINT_LIVEPATCH, LOCKDEP_STILL_OK);
-
 	init_completion(&patch->finish);
 
 	ret = kgr_patch_dir_add(patch);
diff --git a/kernel/module.c b/kernel/module.c
index eb054523c12b..92c95aff7195 100644
--- a/kernel/module.c
+++ b/kernel/module.c
@@ -1200,6 +1200,8 @@ static size_t module_flags_taint(struct module *mod, char *buf)
 		buf[l++] = 'C';
 	if (mod->taints & (1 << TAINT_UNSIGNED_MODULE))
 		buf[l++] = 'E';
+	if (mod->taints & (1 << TAINT_LIVEPATCH))
+		buf[l++] = 'K';
 #ifdef CONFIG_SUSE_KERNEL_SUPPORTED
 	if (mod->taints & (1 << TAINT_NO_SUPPORT))
 		buf[l++] = 'N';
-- 
2.12.0

