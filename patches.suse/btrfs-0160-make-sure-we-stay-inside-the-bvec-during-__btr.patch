From: Chris Mason <clm@fb.com>
Date: Mon, 21 Mar 2016 06:59:09 -0700
Patch-mainline: 4.6
Git-commit: 389f239c53420802ad5085e51e88c37e2df5e003
References: bsc#1012452
Subject: [PATCH] btrfs: make sure we stay inside the bvec during
 __btrfs_lookup_bio_sums

Commit c40a3d38aff4e1c (Btrfs: Compute and look up csums based on
sectorsized blocks) changes around how we walk the bios while looking up
crcs.  There's an inner loop that is jumping to the next bvec based on
sectors and before it derefs the next bvec, it needs to make sure we're
still in the bio.

In this case, the outer loop would have decided to stop moving forward
too, and the bvec deref is never actually used for anything.  But
CONFIG_DEBUG_PAGEALLOC catches it because we're outside our bio.

Signed-off-by: Chris Mason <clm@fb.com>
Reviewed-by: David Sterba <dsterba@suse.com>
Signed-off-by: David Sterba <dsterba@suse.cz>
---
 fs/btrfs/file-item.c |   10 ++++++++++
 1 file changed, 10 insertions(+)

--- a/fs/btrfs/file-item.c
+++ b/fs/btrfs/file-item.c
@@ -291,12 +291,22 @@ found:
 			page_bytes_left -= root->sectorsize;
 			if (!page_bytes_left) {
 				bio_index++;
+				/*
+				 * make sure we're still inside the
+				 * bio before we update page_bytes_left
+				 */
+				if (bio_index >= bio->bi_vcnt) {
+					WARN_ON_ONCE(count);
+					goto done;
+				}
 				bvec++;
 				page_bytes_left = bvec->bv_len;
 			}
 
 		}
 	}
+
+done:
 	btrfs_free_path(path);
 	return 0;
 }
